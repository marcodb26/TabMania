<%# This is a comment in EJS, see https://ejs.co/

We're using EJS for two reasons:
1. We need to supply a different set of Javascript scripts for dev and production
2. We need a way to strip comments out of the popup.html

There are many ways to achieve (2), but since we needed (1), why not get both from the
same tool...

This is not an auto-generated file, but please leave that HTML comment there...

Note the use of the closing tag with the leading "-", indicating "trim-mode ('newline slurp')"
-%>
<!-- AUTO-GENERATED FILE, DO NOT EDIT, see src/templates/popup.html.ejs for details -->

<!DOCTYPE html>
<html lang="en">
	<head>
		<%_ %><%# The EJS slurping logic is a bit broken... you can close the ejs-tag prefixing with
		  # "-", but if you do, it'll take out the "\n", but leave there all the whitespaces before
		  # the beginning of the ejs-tag, which accumulate all in front of the next line, making each
		  # line look completely badly formatted.
		  # You can use "whitespace slurping", but that seems to work only with "scriptlet tags" (so,
		  # with Javascript code), not with comment tags. So you could prepend the comment line with
		  # an empty "whitespace slurping scriptlet tag" (like this comment is), but then the beginning
		  # of each comment becomes very verbose...
		  # Or you could force all comments to start at the beginning of the line, with no whitespaces
		  # before them, but that's unnatural when looking at the template code.
		  #
		  # Looking through old EJS feature requests, they seem to recommend running a prettifier after
		  # EJS to make things look well formatted, and maybe that's what we should be doing here too...
		-%>

		<%_ %><%# Required meta tags (for Bootstrap) -%>
		<meta charset="utf-8">
		<meta name="viewport" content="width=device-width, initial-scale=1">

		<%_
			let basePath = isProd ? "" : "../"; 
			let libPath = isProd ? "lib/" : "../lib/npm/";
		-%>

		<%_ %><%# Bootstrap CSS -%>
		<link href="<%- libPath + "bootstrap.min.css" %>" rel="stylesheet">

		<%_ %><%# https://cdnjs.com/libraries/font-awesome
		  #	<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.2/css/all.min.css" rel="stylesheet">
		  #
		  # Put our CSS *after* the Bootstrap CSS, to make sure we get priority for any rules overlap
		  # See: https://stackoverflow.com/questions/15670631/does-the-order-of-classes-listed-on-an-item-affect-the-css
		-%>
		<link href="popup.css" rel="stylesheet">

		<%_ for(let i = 0; i < popupSources.length; i++) { -%>
		<script src="<%- popupSources[i]%>"></script>
		<%_ } -%>

		<%_ if(!isProd) { -%>
			<%# We don't really need to load these here, but this is the easiest way to
			  # let the parser run and do syntax checking, otherwise chrome.executeScript()
			  # will just leave a "Failed to load file: "inject-getMeta.js"" error -->
			%>
		<script src="<%- basePath + "content-gen/inject-getMeta.js" %>"></script>
		<script src="<%- basePath + "content-gen/inject-togglePlay.js" %>"></script>
		<%_ } -%>


		<%_ %><%# A title and favicon are needed for the undocked version of the popup -%>
		<title>TabMania</title>
		<link rel="icon" href="<%- basePath + "images/icon-16.png" %>" type="image/png">
	</head>

	<%_ %><%# We need "overflow-x: hidden" at the body level to make the horizontal scrollbar
			# of the BsTabs heading are to stay hidden when the popup is too narrow.
			# Putting "overflow-x: hidden" on any other <body> child in the branch towards
			# the haeding area causes "overflow-y" to get set as well, and that in turn
			# causes the main menu to be clipped at the height of the heading area, instead
			# of expanding over the tiles area.
	-%>
	<body style="overflow-x: hidden">

		<%_ %><%# Note that the maximum width of an extension's popup is 800px, but we just need half of that.
		  # See https://stackoverflow.com/questions/8983165/how-can-i-expand-the-popup-window-of-my-chrome-extension#:~:text=Chrome%20extension%20popups%20can%20have,and%20maximum%20width%20of%20800px.
		-%>
		<div id="popup-tabs-div"></div>
		<%_ %><%# Optional JavaScript for Bootstrap -%>
		<script src="<%- libPath + "bootstrap.bundle.min.js" %>"></script>
		<script src="<%- libPath + "dayjs.min.js" %>"></script>
		<script src="<%- libPath + "relativeTime.js" %>"></script>

		<%_ %><%# Never add this back, it's slowing down performance significantly, see notes in /docs
		  #	<script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.2/js/all.min.js"></script>
		-%>
	</body>
</html>